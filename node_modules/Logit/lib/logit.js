//var colors = require('colors');

/**
 * Overwrites obj1's values with obj2's and adds obj2's if non existent in obj1
 * @param obj1
 * @param obj2
 * @returns obj3 a new object based on obj1 and obj2
 */
var merge_options = function(obj1,obj2){
    var obj3 = {};
    for (var attrname in obj1) { if(obj1[attrname]) obj3[attrname] = obj1[attrname]; }
    for (var attrname in obj2) { if(obj2[attrname]) obj3[attrname] = obj2[attrname]; }
    return obj3;
};

var getDate = function() {
    var currentTime = new Date();
    var hours = currentTime.getHours();
    var minutes = currentTime.getMinutes();
    var seconds = currentTime.getSeconds();
    var month = currentTime.getMonth() + 1;
    var day = currentTime.getDate();
    var year = currentTime.getFullYear();
 
    if (hours<10) {hours ="0"+hours;}; 
    if (minutes<10) {minutes="0" +minutes;};
    if (seconds<10) {seconds="0" +seconds;};
    return day+"/"+month+"/"+year+" - "+hours+":"+minutes+":"+seconds+" ";
};

module.exports = function(_callback) {
	this.callback = _callback;    
    this.TYPE_DEBUG = 1; 
    this.TYPE_INFO  = 2;
    this.TYPE_ERROR = 3;
    this.TYPE_NONE = 4;
    this.logInline = false;
    this.debug = {
      mode : this.TYPE_INFO, 
      //enable:true,
      date:true,
      prefix:'',
      //color:'black',
    };

    this.setDebugMode = function(_params){
      this.debug = merge_options(this.debug,_params);
    };

    this.log = function(_msg, _mode, _inline) {        
        var self = this;       
		var txt = ''; 
        if(!_mode) _mode = self.TYPE_INFO;
    	if(_mode < this.debug.mode)  return false;
        if(_inline){ //Si en mode inline
            if(!self.logInline && self.debug.date) _msg = getDate()+' '+_msg;
            //if(self.debug.color){
            //    process.stdout.write(colors[self.debug.color](_msg));
            //}else{
                process.stdout.write(_msg);
            //}            
            self.logInline=true;     
        }else{ //Mode classique
            if(self.logInline){ //Si on doit est en mode inline
                console.log('');
                self.logInline=false;                    
            }
            if (self.debug.prefix) _msg = '['+self.debug.prefix+'] '+_msg;
            if(self.debug.date) _msg = getDate()+' '+_msg;            
            //if(self.debug.color){
            //    txt = colors[self.debug.color](_msg); 
            //}else{
                txt = _msg; 
            //}
			console.log(txt);
			if(self.callback){
				self.callback(txt);
			}
        }
    };;
};
